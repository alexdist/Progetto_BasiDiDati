REM   Script: B&B_BORBONICO
REM   PROGETTO_BASI

CREATE TABLE PERSONA (  
	CF CHAR(16) PRIMARY KEY,  
    NOME VARCHAR(25) NOT NULL,  
    COGNOME VARCHAR(25) NOT NULL,  
    DATA_NASCITA DATE NOT NULL,  
    TEL CHAR(10) UNIQUE  
	);

CREATE TABLE OSPITE ( 
TIPO_DOCUMENTO VARCHAR(20), 
    EMAIL VARCHAR(40), 
    CF_OSPITE CHAR(16) PRIMARY KEY, 
    CONSTRAINT FK_OSPITE FOREIGN KEY (CF_OSPITE) REFERENCES PERSONA(CF), 
    CONSTRAINT  TIPO_DOCUMENTO_CHECK CHECK (TIPO_DOCUMENTO IN ('CARTA_DI_IDENTITA','PATENTE','PASSAPORTO'))  
    );

CREATE TABLE MEZZO_PROPRIO(  
        TARGA VARCHAR(7) PRIMARY KEY, 
        TIPO_M VARCHAR(11), 
    	CF_PROPRIETARIO CHAR(16), 
    	CONSTRAINT  TIPO_M_CHECK CHECK (TIPO_M IN ('MOTOVEICOLO','AUTOVEICOLO')), 
    	CONSTRAINT FK_mez FOREIGN KEY (CF_PROPRIETARIO) REFERENCES OSPITE(CF_OSPITE) 
    );

CREATE TABLE NCC(  
	N_PRENOTAZIONE_NCC NUMBER(3,0) PRIMARY KEY, 
    ZONA_PRELIEVO_OSP VARCHAR(35) NOT NULL, 
    CF_RICHIEDENTE CHAR(16), 
    CONSTRAINT FK_NCC FOREIGN KEY (CF_RICHIEDENTE) REFERENCES OSPITE(CF_OSPITE) 
    );

CREATE TABLE RUOLO( 
    CODICE_BADGE CHAR(10) PRIMARY KEY, 
	MANSIONE VARCHAR(20), 
     CONSTRAINT  MANSIONE_CHECK CHECK (MANSIONE IN ('BARISTA','ADDETTO_PULIZIE','RECEPTIONIST','ADDETTO_CUCINA'))  
);

CREATE TABLE DIPENDENTE( 
	CF_DIPENDENTE CHAR(16)PRIMARY KEY, 
    LINGUE_PARLATE VARCHAR(8), 
    ANNI_ESPERIENZA NUMBER(2,0) NOT NULL, 
    CODICE_BADGE_D CHAR(10), 
    CONSTRAINT FK_DIP FOREIGN KEY (CF_DIPENDENTE) REFERENCES PERSONA(CF), 
    CONSTRAINT FK_RL FOREIGN KEY (CODICE_BADGE_D) REFERENCES RUOLO(CODICE_BADGE), 
    CONSTRAINT LINGUE_PARLATE_CHECK CHECK(LINGUE_PARLATE IN ('SPAGNOLO','INGLESE','FRANCESE')) 
);

CREATE TABLE TURNO( 
	NOME_TURNO VARCHAR(10) PRIMARY KEY, 
    	INIZIO_TURNO DATE NOT NULL, 
   	 FINE_TURNO DATE NOT NULL,  
   	 CONSTRAINT  NOME_TURNO_CHECK CHECK (NOME_TURNO IN ('MATTINA','POMERIGGIO','SERA','NOTTURNO')) 
);

CREATE TABLE ORARIO_TURNI( 
    CF_DIPENDENTE CHAR(16), 
    NOME_TURNO VARCHAR(10), 
    DATA_INIZIO_TURNI DATE, 
    DATA_FINE_TURNI DATE, 
	FOREIGN KEY (CF_DIPENDENTE) REFERENCES DIPENDENTE(CF_DIPENDENTE), 
    FOREIGN KEY (NOME_TURNO) REFERENCES TURNO(NOME_TURNO) 
);

CREATE TABLE TIPO_CONTRATTO_D( 
    	CODICE_IDENTIFICATIVO_D CHAR(11) PRIMARY KEY, 
	CF_DIPENDENTE CHAR(16), 
    	DATA_INIZIO_CONTRATTO DATE NOT NULL, 
    	DATA_SCADENZA DATE, 
    	STIPENDIO NUMBER(5,0) NOT NULL, 
    	CONSTRAINT FK_CT FOREIGN KEY (CF_DIPENDENTE) REFERENCES DIPENDENTE(CF_DIPENDENTE) 
);

CREATE TABLE FORNITORE( 
    CF_FORNITORE CHAR(16) PRIMARY KEY, 
    P_IVA CHAR(10) NOT NULL, 
TIPOLOGIA VARCHAR(15) 
);

CREATE TABLE TIPO_CONTRATTO_F(				 
    	CODICE_IDENTIFICATIVO_F CHAR(11) PRIMARY KEY, 
	CF_FORNITORE CHAR(16), 
	IMPORTO_TRIMESTRALE NUMBER(5,0) NOT NULL, 
	START_OF_CONTRACT DATE, 
	END_OF_CONTRACT DATE, 
   CONSTRAINT FK_CF FOREIGN KEY (CF_FORNITORE) REFERENCES FORNITORE(CF_FORNITORE)  
);

CREATE TABLE SEDI( 
    LOCALITA VARCHAR(25) PRIMARY KEY, 
 	FORNITORE_CF CHAR(16), 
   	GIORNI_CHIUSURA VARCHAR(15), 
	EMAIL_SEDE VARCHAR(45), 
   CONSTRAINT FK_SD FOREIGN KEY (FORNITORE_CF) REFERENCES FORNITORE(CF_FORNITORE) 
);

CREATE TABLE PRENOTAZIONE( 
	NUMERO_PRENOTAZIONE NUMBER(10,0) PRIMARY KEY, 
	DATA_PRENOTAZIONE DATE NOT NULL, 
    	CF_OSPITE_PRENOTANTE CHAR(16), 
   	CONSTRAINT FK_P FOREIGN KEY (CF_OSPITE_PRENOTANTE) REFERENCES OSPITE(CF_OSPITE) 
    );

CREATE TABLE CAMERA( 
NUMERO_CAMERA NUMBER(1,0) PRIMARY KEY, 
PREZZO_CAMERA NUMBER (3,0) NOT NULL, 
DISPONIBILITA CHAR(1) NOT NULL,  
NUMERO_PRENOTAZIONE NUMBER(10,0), 
CONSTRAINT DISPONIBILITA_CHECK CHECK (DISPONIBILITA IN ('T','F')), 
CONSTRAINT FK_CM FOREIGN KEY (NUMERO_PRENOTAZIONE) REFERENCES PRENOTAZIONE(NUMERO_PRENOTAZIONE) 
);

CREATE TABLE ATTIVITA( 
NOME_ATTIVITA VARCHAR(10) NOT NULL, 
PREZZO_ATTIVITA NUMBER (3,0) NOT NULL, 
NUM_PREN NUMBER(10,0), 
DATA_ATTIVITA DATE, 
CONSTRAINT PK_A PRIMARY KEY(NOME_ATTIVITA,DATA_ATTIVITA), 
CONSTRAINT NOME_ATTIVITA_CHECK CHECK (NOME_ATTIVITA IN ('ESCURSIONE','PISCINA','SAUNA')), 
CONSTRAINT FK_AT FOREIGN KEY (NUM_PREN) REFERENCES PRENOTAZIONE(NUMERO_PRENOTAZIONE) 
);

CREATE TABLE PROMOZIONE( 
NOME_PROMOZIONE VARCHAR(10) NOT NULL, 
DATA_INIZIO DATE NOT NULL, 
DATA_FINE DATE NOT NULL, 
PERC_SCONTO VARCHAR(3) NOT NULL, 
NUMERO_PRENOTAZIONE NUMBER(10,0) NOT NULL, 
CONSTRAINT PK_P PRIMARY KEY (NOME_PROMOZIONE,DATA_INIZIO), 
CONSTRAINT PERC_SCONTO_CHECK CHECK (PERC_SCONTO IN ('%15','%25')), 
CONSTRAINT FK_PR FOREIGN KEY (NUMERO_PRENOTAZIONE) REFERENCES PRENOTAZIONE(NUMERO_PRENOTAZIONE) 
);

CREATE TABLE PAGAMENTO( 
COD_TRANSAZIONE VARCHAR(25) PRIMARY KEY, 
TIPO_PAGAMENTO VARCHAR(20) NOT NULL, 
    DATA_TRANSAZIONE DATE NOT NULL, 
    IMPORTO NUMBER(3,0) NOT NULL, 
    INTESTATARIO VARCHAR(25) NOT NULL, 
    NUM_PRENOT NUMBER(10,0), 
   CONSTRAINT TIPO_PAGAMENTO_CHECK CHECK (TIPO_PAGAMENTO IN ('CARTA','CONTANTI','BONIFICO')), 
    CONSTRAINT FK_PA FOREIGN KEY (NUM_PRENOT) REFERENCES PRENOTAZIONE(NUMERO_PRENOTAZIONE) 
);

CREATE TABLE DETTAGLIO_PAGAMENTO( 
    COD_TRANSAZIONE  VARCHAR(25) PRIMARY KEY, 
    VALUTA_EUROPEA CHAR(1) NOT NULL, 
    RATEIZZAZIONE CHAR(1), 
    CONSTRAINT RATEIZZAZIONE_CHECK CHECK (RATEIZZAZIONE IN ('T','F')), 
  CONSTRAINT VALUTA_EUROPEA_CHECK CHECK (VALUTA_EUROPEA IN ('T','F')), 
 CONSTRAINT FK_PP FOREIGN KEY (COD_TRANSAZIONE) REFERENCES PAGAMENTO(COD_TRANSAZIONE) 
) 
 
;

CREATE OR REPLACE TRIGGER TROPPI_RUOLI 
BEFORE INSERT ON DIPENDENTE 
FOR EACH ROW 
DECLARE 
    CONTATORE	NUMBER(1,0):=0; 
	TROPPI_RUOLI	EXCEPTION; 
BEGIN 
    SELECT COUNT(*) 
    INTO CONTATORE 
    FROM DIPENDENTE 
    WHERE CF_DIPENDENTE = :NEW.CF_DIPENDENTE; 
IF	CONTATORE>1	THEN 
RAISE	TROPPI_RUOLI; 
END	IF; 
EXCEPTION 
WHEN	TROPPI_RUOLI	THEN 
RAISE_APPLICATION_ERROR(-20001,'Un dipendente non può avere più di 2 ruoli'); 
END; 

/

Ogni dipendente deve fare un turno giornaliero: 


CREATE OR REPLACE TRIGGER UN_TURNO 
BEFORE INSERT  ON ORARIO_TURNI 
FOR EACH ROW 
DECLARE 
CONTA_TURNI NUMBER(1,0) := 0; 
UN_TURNO EXCEPTION; 
BEGIN 
SELECT COUNT(*) 
INTO CONTA_TURNI 
FROM ORARIO_TURNI 
WHERE CF_DIPENDENTE = :NEW.CF_DIPENDENTE 
AND DATA_INIZIO_TURNI = :NEW.DATA_INIZIO_TURNI; 
 
IF CONTA_TURNI >= 1 THEN 
    RAISE UN_TURNO; 
END IF; 
EXCEPTION 
WHEN UN_TURNO THEN 
RAISE_APPLICATION_ERROR(-20002, 'Il dipendente può avere al massimo un turno al giorno'); 
END; 

/

CREATE OR REPLACE TRIGGER TROPPE_ATTIVITA 
BEFORE INSERT  ON ATTIVITA 
FOR EACH ROW 
DECLARE 
CONTATORE NUMBER(1,0):=0; 
TROPPE_ATTIVITA EXCEPTION; 
BEGIN 
SELECT COUNT(*) 
INTO CONTATORE 
FROM ATTIVITA 
WHERE NUM_PREN = :NEW.NUM_PREN 
AND DATA_ATTIVITA = :NEW.DATA_ATTIVITA; 
 
IF CONTATORE >= 2 THEN 
RAISE TROPPE_ATTIVITA; 
END IF; 
EXCEPTION 
WHEN TROPPE_ATTIVITA THEN 
RAISE_APPLICATION_ERROR(-20003, 'Ogni ospite può scegliere al massimo due attività al giorno'); 
END; 

/

CREATE OR REPLACE TRIGGER ETA_BASSA 
BEFORE INSERT ON PERSONA 
FOR EACH ROW 
DECLARE 
    eta NUMBER(2,0):=0; 
	ETA_BASSA EXCEPTION; 
BEGIN 
    SELECT EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM :NEW.DATA_NASCITA) 
    INTO eta 
    FROM DUAL; 
 
    IF eta < 18 THEN 
	RAISE	ETA_BASSA; 
	END	IF; 
	EXCEPTION 
WHEN	ETA_BASSA	THEN 
RAISE_APPLICATION_ERROR(-20004,'Una persona non puo essere minorenne'); 
END; 

/

CREATE OR REPLACE TRIGGER TROPPE_SEDI 
BEFORE INSERT ON SEDI 
FOR EACH ROW 
DECLARE 
CONTATORE	NUMBER(1,0):=0; 
TROPPE_SEDI EXCEPTION; 
BEGIN 
    SELECT COUNT(*) 
    INTO CONTATORE 
    FROM SEDI 
    WHERE LOCALITA= :NEW.LOCALITA; 
    IF CONTATORE >= 2 THEN 
RAISE	TROPPE_SEDI; 
END	IF; 
EXCEPTION 
WHEN	TROPPE_SEDI	THEN 
RAISE_APPLICATION_ERROR(-20005, 'Ogni fornitore puo avere al massimo due sedi'); 
END; 

/

CREATE OR REPLACE TRIGGER TROPPE_PROMOZIONI 
BEFORE INSERT ON PROMOZIONE 
FOR EACH ROW 
DECLARE 
CONTATORE	NUMBER(1,0):=0; 
TROPPE_PROMOZIONI EXCEPTION; 
BEGIN 
    SELECT COUNT(*) 
    INTO CONTATORE 
    FROM PROMOZIONE 
    WHERE NOME_PROMOZIONE= :NEW.NOME_PROMOZIONE 
    AND DATA_INIZIO= :NEW.DATA_INIZIO; 
    IF CONTATORE >1 THEN 
RAISE	TROPPE_PROMOZIONI; 
END	IF; 
EXCEPTION 
WHEN	TROPPE_PROMOZIONI	THEN 
RAISE_APPLICATION_ERROR(-20006, 'Per ogni prenotazione puo corrispondere al massimo una promozione'); 
END; 
 

/

CREATE OR REPLACE TRIGGER MIN_SALARIO 
BEFORE INSERT ON TIPO_CONTRATTO_D 
FOR EACH ROW 
DECLARE 
MIN_SALARIO EXCEPTION; 
BEGIN 
IF :NEW.STIPENDIO < 16000 THEN 
RAISE MIN_SALARIO; 
END IF; 
EXCEPTION 
WHEN MIN_SALARIO THEN 
RAISE_APPLICATION_ERROR(-20008, 'Lo stipendio inserito deve essere almeno di 16000'); 
END; 

/

CREATE OR REPLACE TRIGGER MAX_IMPORTO 
BEFORE INSERT  ON TIPO_CONTRATTO_F 
FOR EACH ROW 
DECLARE 
MAX_IMPORTO EXCEPTION; 
BEGIN 
    IF :NEW.IMPORTO_TRIMESTRALE > 10000 THEN 
RAISE MAX_IMPORTO; 
END IF; 
EXCEPTION 
WHEN MAX_IMPORTO THEN 
RAISE_APPLICATION_ERROR(-20009, 'Per ogni fornitore il massimo importo trimestrale deve essere di 10000'); 
END; 

/

CREATE OR REPLACE TRIGGER UN_CONTR_ATT 
BEFORE INSERT ON TIPO_CONTRATTO_D 
FOR EACH ROW 
DECLARE 
CONTA_CONTRATTI NUMBER; 
UN_CONTR_ATT EXCEPTION; 
BEGIN 
SELECT COUNT(*) 
INTO CONTA_CONTRATTI 
FROM TIPO_CONTRATTO_D 
WHERE CODICE_IDENTIFICATIVO_D = :NEW.CODICE_IDENTIFICATIVO_D; 
 
IF CONTA_CONTRATTI >= 1 THEN 
RAISE UN_CONTR_ATT; 
END IF; 
EXCEPTION 
WHEN UN_CONTR_ATT THEN 
RAISE_APPLICATION_ERROR(-20010, 'Il dipendente può avere al massimo un contratto attivo'); 
END; 

/

INSERT INTO PERSONA VALUES('AAAABBBBCCCC12DD','Mario','Rossi','11-DEC-90','3303303314');

INSERT INTO PERSONA VALUES('AAAABBBBCCCC12EE','Marco','Verdi','12-DEC-95','3303302214');

INSERT INTO PERSONA VALUES('HHHHBBBBCCCC12EE','Marco','Bianchi','12-DEC-95','3303301214');

INSERT INTO PERSONA VALUES('CCDCBBBBCCCC12EE','Luigi','Bianchi','12-NOV-96','3303301213');

INSERT INTO PERSONA VALUES('FFFFDDDD1616GGGG','Luigi','Rossi','11-JUL-2000','3303305544');

INSERT INTO PERSONA VALUES('FFFFDDDD1616DDCC','Tommaso','Verdi','14-DEC-97','3303302115');

INSERT INTO PERSONA VALUES('FFFFDDDD1616DCCE','John','Rossi','14-DEC-97','3303301315');

INSERT INTO PERSONA VALUES('FFFFDDDD161610FF','Ginevra','Esposito','12-DEC-94','3303301777');

INSERT INTO PERSONA VALUES('FFFFDDDD1616IIII','Giovanni','Rossi','22-JUL-2001','3303305336');

INSERT INTO PERSONA VALUES('FFFFDDDD1616DDII','Taddeo','Bianchi','12-DEC-95','3303302225');

INSERT INTO PERSONA VALUES('FFFFDDDD1616DICE','Matteo','Esposito','12-NOV-97','3304301315');

INSERT INTO PERSONA VALUES('FFFFDDDY161610FF','Emanuele','Esposito','18-OCT-93','3313301777');

INSERT INTO PERSONA VALUES('B10HBBBBCCCC13ZZ','Ciro','De santis','18-SEP-78','7763301214');

INSERT INTO PERSONA VALUES('A101BBBBCCCC12DD','Salvatore','Coppola','14-DEC-80','3301244314');

INSERT INTO PERSONA VALUES('B10HBBBBCCCC12EE','Gennaro','Esposito','11-JUL-75','3301200214');

INSERT INTO PERSONA VALUES('EEEEBBBBCCCC12DD','Giovanni','Iodice','11-JUL-70','3303305543');

INSERT INTO OSPITE VALUES('PATENTE','mariorossi@libero.it','AAAABBBBCCCC12DD');

INSERT INTO OSPITE VALUES('PASSAPORTO','luigibianchi@libero.it','CCDCBBBBCCCC12EE');

INSERT INTO OSPITE VALUES('CARTA_DI_IDENTITA','marcobianchi@libero.it','HHHHBBBBCCCC12EE');

INSERT INTO OSPITE VALUES('PATENTE','marcoverdi@libero.it','AAAABBBBCCCC12EE');

INSERT INTO MEZZO_PROPRIO VALUES('GA700WA','MOTOVEICOLO','AAAABBBBCCCC12DD');

INSERT INTO MEZZO_PROPRIO VALUES('BA544QA','AUTOVEICOLO','HHHHBBBBCCCC12EE');

INSERT INTO MEZZO_PROPRIO VALUES('FC500DA','AUTOVEICOLO','AAAABBBBCCCC12EE');

INSERT INTO NCC VALUES(100,'PIAZZA GARIBALDI','CCDCBBBBCCCC12EE');

INSERT INTO RUOLO VALUES('ACC1020EE7','BARISTA');

INSERT INTO RUOLO VALUES('ABB507E105','RECEPTIONIST');

INSERT INTO RUOLO VALUES('ABB507EBBC','ADDETTO_PULIZIE');

INSERT INTO RUOLO VALUES('DDE507EBBC','ADDETTO_CUCINA');

INSERT INTO RUOLO VALUES('ACC1020EE8','BARISTA');

INSERT INTO RUOLO VALUES('ABB507E106','RECEPTIONIST');

INSERT INTO RUOLO VALUES('ABB507EBBD','ADDETTO_PULIZIE');

INSERT INTO RUOLO VALUES('DDE507EBBD','ADDETTO_CUCINA');

INSERT INTO DIPENDENTE VALUES('FFFFDDDD1616GGGG','SPAGNOLO',10,'ACC1020EE7');

INSERT INTO DIPENDENTE VALUES('FFFFDDDD1616DDCC','SPAGNOLO',10,'ABB507E105');

INSERT INTO DIPENDENTE VALUES('FFFFDDDD1616DCCE','INGLESE',8,'ABB507EBBC');

INSERT INTO DIPENDENTE VALUES('FFFFDDDD161610FF','FRANCESE',7,'DDE507EBBC');

INSERT INTO DIPENDENTE VALUES('FFFFDDDD1616IIII','INGLESE',12,'ACC1020EE8');

INSERT INTO DIPENDENTE VALUES('FFFFDDDD1616DDII','FRANCESE',11,'ABB507E106');

INSERT INTO DIPENDENTE VALUES('FFFFDDDD1616DICE','INGLESE',6,'ABB507EBBD');

INSERT INTO DIPENDENTE VALUES('FFFFDDDY161610FF','INGLESE',8,'DDE507EBBD');

INSERT INTO TIPO_CONTRATTO_D VALUES('320AABCDD90','FFFFDDDD1616GGGG','12-OCT-2012','11-DEC-2024',20000);

INSERT INTO TIPO_CONTRATTO_D VALUES('450AABEEE70','FFFFDDDD1616DDCC','12-FEB-2012','11-DEC-2025',18000);

INSERT INTO TIPO_CONTRATTO_D VALUES('555CCRREE75','FFFFDDDD1616DCCE','14-OCT-2014',NULL,25000);

INSERT INTO TIPO_CONTRATTO_D VALUES('777WWWWET80','FFFFDDDD161610FF','15-JUL-2015','08-NOV-2025',24000);

INSERT INTO TIPO_CONTRATTO_D VALUES('663EEQQAT79','FFFFDDDD1616IIII','12-NOV-2015','11-DEC-2024',20000);

INSERT INTO TIPO_CONTRATTO_D VALUES('660RRYYRR81','FFFFDDDD1616DDII','12-OCT-2012','08-NOV-2025',18000);

INSERT INTO TIPO_CONTRATTO_D VALUES('300JJZZRK87','FFFFDDDD1616DICE','11-JUL-2013',NULL,25000);

INSERT INTO TIPO_CONTRATTO_D VALUES('960JKJNLM90','FFFFDDDY161610FF','25-OCT-2014','08-NOV-2025',24000);

INSERT INTO TURNO VALUES('MATTINA',TO_DATE('06:30:00','HH24:MI:SS'),TO_DATE('12:30:00','HH24:MI:SS'));

INSERT INTO TURNO VALUES('POMERIGGIO',TO_DATE('12:30:00','HH24:MI:SS'),TO_DATE('18:30:00','HH24:MI:SS'));

INSERT INTO TURNO VALUES('SERA',TO_DATE('18:30:00','HH24:MI:SS'),TO_DATE('00:30:00','HH24:MI:SS'));

INSERT INTO TURNO VALUES('NOTTURNO',TO_DATE('00:30:00','HH24:MI:SS'),TO_DATE('06:30:00','HH24:MI:SS'));

INSERT INTO ORARIO_TURNI VALUES('FFFFDDDD1616GGGG','MATTINA','15-MAY-2024','25-JUN-2024');

INSERT INTO ORARIO_TURNI VALUES('FFFFDDDD1616DDCC','POMERIGGIO','15-MAY-2024','25-JUN-2024');

INSERT INTO ORARIO_TURNI VALUES('FFFFDDDD1616DCCE','SERA','15-MAY-2024','25-JUN-2024');

INSERT INTO ORARIO_TURNI VALUES('FFFFDDDD161610FF','NOTTURNO','15-MAY-2024','25-JUN-2024');

INSERT INTO ORARIO_TURNI VALUES('FFFFDDDD1616IIII','MATTINA','15-MAY-2024','25-JUN-2024');

INSERT INTO ORARIO_TURNI VALUES('FFFFDDDD1616DDII','POMERIGGIO','15-MAY-2024','25-JUN-2024');

INSERT INTO ORARIO_TURNI VALUES('FFFFDDDD1616DICE','SERA','15-MAY-2024','25-JUN-2024');

INSERT INTO ORARIO_TURNI VALUES('FFFFDDDY161610FF','NOTTURNO','15-MAY-2024','25-JUN-2024');

INSERT INTO FORNITORE VALUES('B10HBBBBCCCC13ZZ','B20244AA91','Bar Services');

INSERT INTO FORNITORE VALUES('A101BBBBCCCC12DD','B66BB47A91','Laundry Service');

INSERT INTO FORNITORE VALUES('B10HBBBBCCCC12EE','B66BC98A91','Bibite');

INSERT INTO FORNITORE VALUES('EEEEBBBBCCCC12DD','B66BB57B91','Alimentare');

INSERT INTO TIPO_CONTRATTO_F VALUES ('MNN541RRD65','B10HBBBBCCCC13ZZ',6000,'01-JAN-24','31-DEC-25');

INSERT INTO TIPO_CONTRATTO_F VALUES ('KRR698DFR44','A101BBBBCCCC12DD',6500,'01-JAN-23','31-DEC-24');

INSERT INTO TIPO_CONTRATTO_F VALUES ('GGD155JJN98','B10HBBBBCCCC12EE',7000,'01-JAN-23','31-DEC-26');

INSERT INTO TIPO_CONTRATTO_F VALUES ('ZZR514FFE81','EEEEBBBBCCCC12DD',6000,'01-FEB-24','31-DEC-26');

INSERT INTO SEDI VALUES ('Ercolano','B10HBBBBCCCC12EE','LUNEDI','ercolano_services@gmail.com');

INSERT INTO SEDI VALUES ('San Giuseppe Vesuviano','B10HBBBBCCCC12EE','VENERDI','sede_SGV@gmail.com');

INSERT INTO SEDI VALUES ('Giugliano','A101BBBBCCCC12DD','MARTEDI','giugliano_services@gmail.com');

INSERT INTO SEDI VALUES ('Pompei','A101BBBBCCCC12DD','DOMENICA','pompei_services@gmail.com');

INSERT INTO SEDI VALUES ('Villaricca','B10HBBBBCCCC13ZZ','LUNEDI','villaricca_bibite@libero.it');

INSERT INTO SEDI VALUES ('Casoria','B10HBBBBCCCC13ZZ','MERCOLEDI','Casoria_bibite@libero.it');

INSERT INTO SEDI VALUES ('Napoli','EEEEBBBBCCCC12DD','MARTEDI','giugliano_alimentari@libero.it');

INSERT INTO SEDI VALUES ('Sorrento','EEEEBBBBCCCC12DD','SABATO','Sorrento_alimenti@libero.it');

INSERT INTO PRENOTAZIONE VALUES(5000,'20-MAY-2024','AAAABBBBCCCC12DD');

INSERT INTO PRENOTAZIONE VALUES(4000,'20-MAY-2024','CCDCBBBBCCCC12EE');

INSERT INTO PRENOTAZIONE VALUES(6666,'20-FEB-2024','HHHHBBBBCCCC12EE');

INSERT INTO PRENOTAZIONE VALUES(10000,'20-APR-2024','AAAABBBBCCCC12EE');

INSERT INTO CAMERA VALUES(1,150,'T',4000);

INSERT INTO CAMERA VALUES(2,175,'T',5000);

INSERT INTO CAMERA VALUES(3,100,'T',10000);

INSERT INTO ATTIVITA VALUES('ESCURSIONE',100,6666,'6-JUN-2024');

INSERT INTO ATTIVITA VALUES('PISCINA',40,4000,'14-JUL-2024');

INSERT INTO ATTIVITA VALUES('SAUNA',75,5000,'13-JUN-2024');

INSERT INTO ATTIVITA VALUES('SAUNA',75,4000,'14-JUL-2024');

INSERT INTO ATTIVITA VALUES('PISCINA',40,5000,'13-JUN-2024');

INSERT INTO PROMOZIONE VALUES('MANAGER','1-JUN-2024','31-JUL-2024','%15',10000);

INSERT INTO PROMOZIONE VALUES('ERASMUS','1-JUN-2024','31-JUL-2024','%25',4000);

INSERT INTO PAGAMENTO VALUES('8792 4536 2187 7654','CARTA','15-JUN-2024',255,'B&B BORBONICO',10000);

INSERT INTO PAGAMENTO VALUES('5634 9812 7456 3201','CONTANTI','15-JUL-2024',726,'B&B BORBONICO',4000);

INSERT INTO PAGAMENTO VALUES('1789 6543 2901 4367','BONIFICO','15-JUN-2024',600,'B&B BORBONICO',5000);

INSERT INTO PAGAMENTO VALUES('9012 3456 7689 1234','CONTANTI','7-JUN-2024',100,'B&B BORBONICO',6666);

INSERT INTO DETTAGLIO_PAGAMENTO VALUES('8792 4536 2187 7654','F','T');

INSERT INTO DETTAGLIO_PAGAMENTO VALUES('5634 9812 7456 3201','F','F');

INSERT INTO DETTAGLIO_PAGAMENTO VALUES('1789 6543 2901 4367','F','T');

INSERT INTO DETTAGLIO_PAGAMENTO VALUES('9012 3456 7689 1234','F','T');

CREATE OR REPLACE PROCEDURE CercaPrenotazioniPerZonaPrelievo( 
    p_ZONA_PRELIEVO VARCHAR 
) IS 
BEGIN 
    FOR r IN (SELECT N.N_PRENOTAZIONE_NCC, O.CF_OSPITE, P.NOME, P.COGNOME 
              FROM NCC N 
              JOIN OSPITE O ON N.CF_RICHIEDENTE = O.CF_OSPITE 
              JOIN PERSONA P ON O.CF_OSPITE = P.CF 
              WHERE N.ZONA_PRELIEVO_OSP = p_ZONA_PRELIEVO) 
    LOOP 
        DBMS_OUTPUT.PUT_LINE('Numero Prenotazione: ' || r.N_PRENOTAZIONE_NCC || ', CF Ospite: ' || r.CF_OSPITE || ', Nome: ' || r.NOME || ', Cognome: ' || r.COGNOME); 
    END LOOP; 
END;
/

CREATE OR REPLACE PROCEDURE CercaTurniPerDipendente( 
    p_CF_DIPENDENTE CHAR 
) IS 
BEGIN 
    FOR r IN (SELECT T.NOME_TURNO, TO_CHAR(T.INIZIO_TURNO, 'HH24:MI:SS') AS INIZIO_TURNO,  
                     TO_CHAR(T.FINE_TURNO, 'HH24:MI:SS') AS FINE_TURNO, P.NOME, P.COGNOME 
              FROM ORARIO_TURNI OT 
              JOIN TURNO T ON OT.NOME_TURNO = T.NOME_TURNO 
              JOIN PERSONA P ON OT.CF_DIPENDENTE = P.CF 
              WHERE OT.CF_DIPENDENTE = p_CF_DIPENDENTE) 
    LOOP 
        DBMS_OUTPUT.PUT_LINE('Nome Turno: ' || r.NOME_TURNO || ', Inizio Turno: ' || r.INIZIO_TURNO || ', Fine Turno: ' || r.FINE_TURNO || ', Nome: ' || r.NOME || ', Cognome: ' || r.COGNOME); 
    END LOOP; 
END;
/

CREATE OR REPLACE PROCEDURE CercaFornitoriPerTipologia( 
    p_TIPOLOGIA VARCHAR 
) IS 
BEGIN 
    FOR r IN (SELECT F.CF_FORNITORE, P.NOME, P.COGNOME,S.LOCALITA 
              FROM FORNITORE F 
    		JOIN SEDI S ON F.CF_FORNITORE=S.FORNITORE_CF 
              JOIN PERSONA P ON F.CF_FORNITORE = P.CF 
              WHERE F.TIPOLOGIA = p_TIPOLOGIA) 
    LOOP 
        DBMS_OUTPUT.PUT_LINE('CF Fornitore: ' || r.CF_FORNITORE || ', Nome: ' || r.NOME || ', Cognome: ' || r.COGNOME || ', Localita: ' || r.LOCALITA); 
    END LOOP; 
END;
/

CREATE OR REPLACE PROCEDURE CercaDipendentiPerMansione( 
    p_MANSIONE VARCHAR 
) IS 
BEGIN 
    FOR r IN (SELECT D.CF_DIPENDENTE, P.NOME, P.COGNOME 
              FROM DIPENDENTE D 
              JOIN PERSONA P ON D.CF_DIPENDENTE = P.CF 
              JOIN RUOLO R ON D.CODICE_BADGE_D = R.CODICE_BADGE 
              WHERE R.MANSIONE = p_MANSIONE) 
    LOOP 
        DBMS_OUTPUT.PUT_LINE('CF Dipendente: ' || r.CF_DIPENDENTE || ', Nome: ' || r.NOME || ', Cognome: ' || r.COGNOME); 
    END LOOP; 
END; 

/

CREATE OR REPLACE PROCEDURE CercaPrenotazioniOspite( 
    p_CF_OSPITE CHAR 
) IS 
BEGIN 
    FOR r IN (SELECT P.NOME,P.COGNOME,P.CF,PP.NUMERO_PRENOTAZIONE,PP.DATA_PRENOTAZIONE 
    FROM PERSONA P JOIN OSPITE O ON P.CF=O.CF_OSPITE 
    JOIN PRENOTAZIONE PP ON  PP.CF_OSPITE_PRENOTANTE=O.CF_OSPITE 
    WHERE CF_OSPITE_PRENOTANTE = p_CF_OSPITE 
    ) 
    LOOP 
        DBMS_OUTPUT.PUT_LINE(' Nome: ' || r.NOME || ', Cognome: ' || r.COGNOME || ', CF ospite: ' || r.CF ||',Numero Prenotazione: ' || r.NUMERO_PRENOTAZIONE || ', Data Prenotazione: ' || 		r.DATA_PRENOTAZIONE); 
    END LOOP; 
END; 

/

